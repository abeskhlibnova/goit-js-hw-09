{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,IAAKL,SAASC,cAAc,WAmB9B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC/BC,YAAW,WACeC,KAAKC,SAAW,GAEtCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UAEnDA,MAID,SAASQ,EAAGC,GACVC,EAAAtB,GAASuB,OAAOC,QAAQH,GAE1B,SAASI,EAAMC,GACbJ,EAAAtB,GAASuB,OAAOI,QAAQD,GAjC5BxB,EAAKC,KAAKyB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAKJ,IAJE,IAAIlB,EAAQmB,SAAS7B,EAAKI,WAAW0B,OAC/BC,EAAOF,SAAS7B,EAAKK,UAAUyB,OAC/BE,EAAShC,EAAKM,YAAYwB,MAEzBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BzB,EAAcyB,EAAI,EAAGvB,GACpBwB,KAAKhB,GACLiB,MAAMZ,GACPb,GAASqB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector(\"button\"),\n}\n\nrefs.form.addEventListener(\"submit\", timeout);\n\nfunction timeout (e){\n  e.preventDefault();\n  let delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = refs.amountInput.value;\n\nfor (let i = 0; i < amount; i += 1){\n  createPromise(i + 1, delay)\n  .then(ok)\n  .catch(notOk);\n  delay += step;\n}\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\nsetTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  } else {\n    reject(`❌ Rejected promise ${position} in ${delay} ms`);\n  }\n}, delay);\n})\n}\n    \n  function ok(result) {\n    Notiflix.Notify.success(result);\n  }\n  function notOk(error) {\n    Notiflix.Notify.failure(error);\n  }\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","$ce04d3a99e08e73b$var$ok","result","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$notOk","error","failure","addEventListener","e","preventDefault","parseInt","value","step","amount","i","then","catch"],"version":3,"file":"03-promises.150763cb.js.map"}